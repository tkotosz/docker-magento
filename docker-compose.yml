services:
  nginx-tls-offload:
    build:
      context: docker/nginx-tls-offload
    environment:
      PROXY_PASS_URL: 'http://varnish'
    depends_on:
      - varnish
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/app:delegated
    networks:
      - backend

  varnish:
    build:
      context: docker/varnish
    environment:
      VARNISH_SIZE: 1024M
      BACKEND_HOST: nginx
      BACKEND_PORT: 80
    depends_on:
      - nginx
    volumes:
      - type: tmpfs
        target: /var/lib/varnish:exec
        tmpfs:
          size: 100000
    networks:
      - backend

  nginx:
    build:
      context: docker/nginx
    environment:
      FPM_HOST: php-fpm
      FPM_DEBUG_HOST: php-fpm-debug
    depends_on:
      - php-fpm
      - php-fpm-debug
    volumes:
      - ./:/app:delegated
    networks:
      - backend

  php-fpm:
    build:
      context: docker/php-fpm
      args:
        APP_USER_ID: 1000
        APP_GROUP_ID: 1000
        XDEBUG: 0
    environment:
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
    depends_on:
      - database
      - search
      - redis-cache
      - redis-session
      - rabbitmq
      - mailhog
    volumes:
      - ./:/app:delegated
    networks:
      - backend

  php-fpm-debug:
    build:
      context: docker/php-fpm
      args:
        APP_USER_ID: 1000
        APP_GROUP_ID: 1000
        XDEBUG: 1
    environment:
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
    depends_on:
      - database
      - search
      - redis-cache
      - redis-session
      - rabbitmq
      - mailhog
    volumes:
      - ./:/app:delegated
    networks:
      - backend

  database:
    image: mariadb:10.6
    command:
     - '--default-authentication-plugin=mysql_native_password'
     - '--log_bin_trust_function_creators=1'
     - '--max_allowed_packet=4M'
    environment:
      MARIADB_ROOT_PASSWORD: root
      MARIADB_USER: magento
      MARIADB_PASSWORD: magento
      MARIADB_DATABASE: magentodb
    networks:
      - backend

  search:
    image: opensearchproject/opensearch:2.12.0
    environment:
     - ES_JAVA_OPTS=-Xms512m -Xmx512m
     - discovery.type=single-node
     - plugins.security.disabled=true
     - DISABLE_INSTALL_DEMO_CONFIG=true
    networks:
      - backend

  redis-cache:
    image: redis:7.2
    # 1GB; evict any least recently used key even if they don't have a TTL
    command:
      - '--maxmemory 1073742000'
      - '--maxmemory-policy allkeys-lru'
      - '--save 3600 1'
      - '--save 300 100'
      - '--save 60 10000'
    networks:
      - backend

  redis-session:
    image: redis:7.2
    # 1GB; evict key that would expire soonest
    command:
      - '--maxmemory 1073742000'
      - '--maxmemory-policy volatile-ttl'
      - '--save 3600 1'
      - '--save 300 100'
      - '--save 60 10000'
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3.13-management
    environment:
      RABBITMQ_DEFAULT_USER: rabbit_magento
      RABBITMQ_DEFAULT_VHOST: rabbit_magento
      RABBITMQ_DEFAULT_PASS: rabbit_magento
      RABBITMQ_ERLANG_COOKIE: rabbit_magento
    ports:
      - "15672:15672"
    networks:
      - backend

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "8025:8025"
    networks:
      - backend

  console:
    build:
      context: docker/console
      args:
        APP_USER_ID: 1000
        APP_GROUP_ID: 1000
        XDEBUG: 0
    environment:
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
    depends_on:
      - database
      - search
      - redis-cache
      - redis-session
      - rabbitmq
      - mailhog
    volumes:
      - ./:/app:delegated
    networks:
      - backend

  console-debug:
    build:
      context: docker/console
      args:
        APP_USER_ID: 1000
        APP_GROUP_ID: 1000
        XDEBUG: 1
    environment:
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
    depends_on:
      - database
      - search
      - redis-cache
      - redis-session
      - rabbitmq
      - mailhog
    volumes:
      - ./:/app:delegated
    networks:
      - backend

networks:
  backend:
    driver: bridge
