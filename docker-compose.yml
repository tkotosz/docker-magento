version: '3.7'

services:
  nginx-proxy:
    image: tkotosz/nginx1.19-proxy-alpine-magento-dev:latest
    environment:
      PROXY_PASS_URL: 'http://varnish'
    depends_on:
      - varnish
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/app:delegated
    networks:
      - backend

  varnish:
    image: tkotosz/varnish7-magento-dev:latest
    environment:
      VARNISH_SIZE: 1024M
      BACKEND_HOST: nginx
      BACKEND_PORT: 80
    depends_on:
      - nginx
    volumes:
      - type: tmpfs
        target: /var/lib/varnish:exec
        tmpfs:
          size: "100000"
    networks:
      - backend

  nginx:
    image: tkotosz/nginx1.19-alpine-magento-dev:latest
    environment:
      FPM_HOST: php-fpm
      FPM_DEBUG_HOST: php-fpm-debug
    depends_on:
      - php-fpm
      - php-fpm-debug
    volumes:
      - ./:/app:delegated
    networks:
      - backend

  php-fpm:
    image: tkotosz/php8.1-fpm-alpine-magento-dev:latest
    environment:
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
    depends_on:
      - database
      - elasticsearch
      - redis-cache
      - redis-session
      - rabbitmq
      - mailhog
    volumes:
      - ./:/app:delegated
    networks:
      - backend

  php-fpm-debug:
    image: tkotosz/php8.1-fpm-alpine-magento-dev-debug:latest
    environment:
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
    depends_on:
      - database
      - elasticsearch
      - redis-cache
      - redis-session
      - rabbitmq
      - mailhog
    volumes:
      - ./:/app:delegated
    networks:
      - backend

  database:
    image: mysql:8.0
    command:
      - '--default-authentication-plugin=mysql_native_password'
      - '--log_bin_trust_function_creators=1'
      - '--max_allowed_packet=4M'
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: magento
      MYSQL_PASSWORD: magento
      MYSQL_DATABASE: magentodb
    volumes:
      - database-data:/var/lib/mysql
    networks:
      - backend

  elasticsearch:
    image: elasticsearch:7.17.9
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - discovery.type=single-node
    networks:
      - backend

  redis-cache:
    image: redis:6.2
    # 1GB; evict any least recently used key even if they don't have a TTL
    command:
      - '--maxmemory 1073742000'
      - '--maxmemory-policy allkeys-lru'
      - '--save 3600 1'
      - '--save 300 100'
      - '--save 60 10000'
    networks:
      - backend

  redis-session:
    image: redis:6.2
    # 1GB; evict key that would expire soonest
    command:
      - '--maxmemory 1073742000'
      - '--maxmemory-policy volatile-ttl'
      - '--save 3600 1'
      - '--save 300 100'
      - '--save 60 10000'
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3.9-management
    environment:
      RABBITMQ_DEFAULT_USER: rabbit_magento
      RABBITMQ_DEFAULT_VHOST: rabbit_magento
      RABBITMQ_DEFAULT_PASS: rabbit_magento
      RABBITMQ_ERLANG_COOKIE: rabbit_magento
    ports:
      - "15672:15672"
    networks:
      - backend

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "8025:8025"
    networks:
      - backend

  console:
    image: tkotosz/php8.1-cli-alpine-magento-dev:latest
    environment:
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
    depends_on:
      - database
      - elasticsearch
      - redis-cache
      - redis-session
      - rabbitmq
      - mailhog
    volumes:
      - ./:/app:delegated
    networks:
      - backend

  console-debug:
    image: tkotosz/php8.1-cli-alpine-magento-dev-debug:latest
    environment:
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
    depends_on:
      - database
      - elasticsearch
      - redis-cache
      - redis-session
      - rabbitmq
      - mailhog
    volumes:
      - ./:/app:delegated
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  database-data: {}
